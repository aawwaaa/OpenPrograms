NAME
  gmux-plugin-screen_keyboard - on-screen virtual keyboard interface

SYNOPSIS
  The screen_keyboard plugin provides a graphical on-screen keyboard for touch
  input, supporting all standard keys including function keys, modifiers, and
  special characters.

DESCRIPTION
  The screen_keyboard plugin creates a virtual keyboard interface that appears
  on screen for touch input. It provides a complete keyboard layout with all
  standard keys, function keys, modifiers, and special characters. The keyboard
  automatically appears when no physical keyboard is detected and can be toggled
  manually. It supports both touch and mouse input for key activation.

FEATURES
  - Complete keyboard layout display
  - Touch-based key activation
  - Function key support (F1-F12)
  - Modifier key support (Shift, Ctrl, Alt, Caps)
  - Special character support
  - Visual key state feedback
  - Automatic keyboard detection
  - Toggle functionality

KEYBOARD LAYOUT
  The on-screen keyboard displays a complete keyboard layout:

  Function Row:
    Es F1 F2 F3 F4 F5 F6 F7 F8 F9 FA FB FC Del In

  Number Row:
    `~ 1! 2@ 3# 4$ 5% 6^ 7& 8* 9( 0) -_ =+ Bac Ho

  QWERTY Row:
    Tab qQ wW eE rR tT yY uU iI oO pP [{ ]} \| PU

  Home Row:
    Caps aA sS dD fF gG hH jJ kK lL ;: '" Ente PD

  Bottom Row:
    Shift zZ xX cC vV bB nN mM ,< .> /? ShR Up Ed

  Control Row:
    Ctrl    Alt Space           AlR CtrR Le Do Ri

SPECIAL KEYS
  The keyboard supports various special keys and functions:

  Function Keys:
    - F1-F12: Standard function keys
    - Each function key has unique behavior

  Modifier Keys:
    - Shift: Toggle shift state
    - Ctrl: Control modifier
    - Alt: Alt modifier
    - Caps: Caps lock toggle

  Navigation Keys:
    - Arrow keys (Up, Down, Left, Right)
    - Home, End, Page Up, Page Down
    - Insert, Delete

  Special Characters:
    - Backspace, Tab, Enter
    - Bracket pairs ([], {})
    - Punctuation and symbols
    - Space bar

KEY STATE MANAGEMENT
  The keyboard maintains various key states:

  Modifier States:
    - Shift: Affects character output
    - Ctrl: Control combinations
    - Alt: Alt combinations
    - Caps: Capitalization toggle

  Visual Feedback:
    - Active keys are highlighted
    - Modifier states are visually indicated
    - Key press animations
    - State change indicators

ACTIVATION
  The keyboard can be activated in several ways:

  Automatic Detection:
    - Appears when no physical keyboard is detected
    - Checks screen.getKeyboards() for available keyboards
    - Auto-hides when physical keyboard is available

  Manual Toggle:
    - Click the keyboard icon in the bottom-right corner
    - Icon changes appearance when keyboard is active
    - Toggle on/off functionality

KEYBOARD WINDOW
  When activated, the keyboard creates a dedicated window:

  Window Properties:
    - Position: Bottom-right corner
    - Size: Based on keyboard layout
    - Layer: 800 (above normal windows)
    - No focus: Doesn't steal focus from applications
    - Non-resizable: Fixed size layout

  Window Behavior:
    - Stays on top of other windows
    - Doesn't interfere with application focus
    - Touch events are processed locally
    - Key events are sent to focused application

TECHNICAL IMPLEMENTATION
  The plugin creates a comprehensive keyboard interface:

  Plugin Structure:
    local api = require("gmux/frontend/api")
    local windows = require("gmux/frontend/windows")
    local graphics = require("gmux/frontend/graphics")
    
    -- Keyboard layout definition
    local keys = [[...]]
    local specials = {...}
    
    -- Keyboard state management
    local special_status = {
        caps = false, shift = false, ctrl = false, alt = false
    }

  Key Processing:
    - Touch event detection on key areas
    - Key state management and updates
    - Virtual key event generation
    - Modifier state synchronization

  Event Generation:
    - Creates virtual keyboard events
    - Maintains proper event timing
    - Handles modifier combinations
    - Sends events to focused applications

USAGE SCENARIOS
  The screen_keyboard plugin is useful in various scenarios:

  Touch-Only Systems:
    - Primary input method for touch screens
    - No physical keyboard required
    - Full keyboard functionality
    - Accessible input method

  Accessibility:
    - Alternative input for users with disabilities
    - Large, visible key layout
    - Touch-friendly interface
    - Customizable key sizes

  Development Testing:
    - Test keyboard input without physical keyboard
    - Validate key event handling
    - Debug keyboard-related issues
    - Simulate different keyboard layouts

CONFIGURATION
  The plugin is enabled by default in the .enable file:
    {
        screen_keyboard = true
    }

  Keyboard settings can be modified:
    - Key layout and positioning
    - Visual appearance and colors
    - Key size and spacing
    - Activation behavior

ERROR HANDLING
  The plugin includes error handling for:
  - Touch event processing errors
  - Key state inconsistencies
  - Window creation failures
  - Event generation errors
  - Visual rendering issues

LIMITATIONS
  - Fixed keyboard layout
  - No custom key mapping
  - Limited to touch/mouse input
  - No haptic feedback
  - Fixed visual appearance

PERFORMANCE CONSIDERATIONS
  The keyboard is optimized for performance:
  - Efficient touch event processing
  - Minimal visual updates
  - Optimized key state management
  - Fast response times
  - Low memory usage

SEE ALSO
  gmux(1), gmux-plugin(1), gmux-plugin-keyboard_touch(1) 