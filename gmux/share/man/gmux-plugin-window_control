NAME
  gmux-plugin-window_control - keyboard shortcuts for window management

SYNOPSIS
  The window_control plugin provides comprehensive keyboard shortcuts for window
  operations including switching, movement, resizing, and control functions.

DESCRIPTION
  The window_control plugin extends the gmux system with keyboard-based window
  management capabilities. It enables users to perform all window operations using
  keyboard shortcuts, providing efficient window control without requiring mouse
  input. The plugin supports window switching, movement, resizing, and various
  control operations through Alt key combinations.

FEATURES
  - Window switching and focus management
  - Window movement with keyboard
  - Window resizing with arrow keys
  - Window control operations (minimize, maximize, close)
  - Alt key modifier support
  - Comprehensive keyboard shortcuts
  - Real-time window manipulation

KEYBOARD SHORTCUTS
  The plugin provides the following keyboard shortcuts (all require Alt key):

  Window Switching:
    - Alt+Q: Switch to next window
    - Alt+Shift+Q: Switch to previous window
    - Cycles through all open windows

  Window Movement:
    - Alt+W: Move window up
    - Alt+S: Move window down
    - Alt+A: Move window left
    - Alt+D: Move window right
    - Movement is relative to current position

  Window Resizing:
    - Alt+Left Arrow: Decrease window width
    - Alt+Right Arrow: Increase window width
    - Alt+Up Arrow: Decrease window height
    - Alt+Down Arrow: Increase window height
    - Resizing is incremental

  Window Control:
    - Alt+Z: Minimize window
    - Alt+X: Maximize window
    - Alt+C: Close window
    - Immediate execution of control operations

WINDOW OPERATIONS
  The plugin supports various window operations:

  Window Switching:
    - Cycles through all open windows
    - Maintains focus order
    - Handles window list changes
    - Supports forward and backward navigation

  Window Movement:
    - Relative movement from current position
    - Bounds checking for screen limits
    - Smooth movement with single key press
    - Immediate position updates

  Window Resizing:
    - Incremental size changes
    - Minimum and maximum size limits
    - Aspect ratio considerations
    - Real-time size updates

  Window Control:
    - Minimize: Reduces window to minimum size
    - Maximize: Expands window to full screen
    - Close: Terminates window and application
    - Immediate operation execution

TECHNICAL IMPLEMENTATION
  The plugin uses signal filtering for keyboard event processing:

  Plugin Structure:
    local windows = require("gmux/frontend/windows")
    local keyboard = require("keyboard")
    
    -- Window control functions
    local function toggle_window()
        -- Window switching logic
    end
    
    local function move_window_cherry(offset_x, offset_y)
        -- Window movement logic
    end
    
    -- Signal filter registration
    table.insert(windows.signal_filters, function(signal, source, char, code, player)
        -- Keyboard event processing
    end)

  Signal Processing:
    - Intercepts keyboard events when Alt is held
    - Processes window control keys
    - Executes window operations
    - Manages window state changes

  Window Management:
    - Direct access to window system
    - Real-time window manipulation
    - State consistency maintenance
    - Error handling for invalid operations

USAGE SCENARIOS
  The window_control plugin is useful in various scenarios:

  Keyboard-Only Systems:
    - Complete window management without mouse
    - Efficient keyboard-based workflow
    - Accessibility for users with mobility limitations
    - Alternative to mouse input

  Development Workflow:
    - Quick window switching during development
    - Efficient window arrangement
    - Fast application management
    - Streamlined multitasking

  System Administration:
    - Remote system management
    - Terminal-based window control
    - Efficient system navigation
    - Quick application switching

WINDOW STATE MANAGEMENT
  The plugin maintains window state information:

  Focus Management:
    - Tracks currently focused window
    - Maintains window switching order
    - Handles window list updates
    - Manages focus transitions

  Position Tracking:
    - Monitors window positions
    - Validates movement bounds
    - Updates position state
    - Handles position conflicts

  Size Management:
    - Tracks window dimensions
    - Validates size constraints
    - Updates size state
    - Handles resize conflicts

ERROR HANDLING
  The plugin includes comprehensive error handling:
  - Invalid window references
  - Out-of-bounds operations
  - Window state inconsistencies
  - Operation failures
  - Keyboard event errors

CONFIGURATION
  The plugin is enabled by default in the .enable file:
    {
        window_control = true
    }

  Plugin settings can be modified:
    - Key mappings
    - Movement speed
    - Resize increments
    - Operation behavior
    - Focus management

LIMITATIONS
  - Requires Alt key modifier
  - Fixed key mappings
  - No custom shortcuts
  - Limited to keyboard input
  - No gesture support

PERFORMANCE CONSIDERATIONS
  The plugin is optimized for performance:
  - Efficient signal filtering
  - Minimal window state updates
  - Fast operation execution
  - Low memory footprint
  - Responsive keyboard handling

BEST PRACTICES
  For optimal use of the window_control plugin:

  Window Switching:
    - Use Alt+Q for forward navigation
    - Use Alt+Shift+Q for backward navigation
    - Learn window order for efficient switching

  Window Movement:
    - Use small increments for precise positioning
    - Combine movement keys for diagonal movement
    - Check window bounds before movement

  Window Resizing:
    - Use arrow keys for incremental resizing
    - Consider minimum window sizes
    - Test resize operations on different applications

  Window Control:
    - Use Alt+C carefully (closes applications)
    - Alt+X for full-screen applications
    - Alt+Z for temporary window hiding

SEE ALSO
  gmux(1), gmux-plugin(1) 